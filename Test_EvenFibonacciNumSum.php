<?php
/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
**/

class Test_EvenFibonacciNumSum extends PHPUnit_Framework_TestCase
{
    function testEvenFibonacciNumSum(){
        
        $obj = new evenFibonaciNumSum();
        
        // make sure method exists
        $this->assertTrue( method_exists($obj,'evenFibonacciNumSum'), 'No method "EvenFibonacciNumSum" found.' );
        
        // we expect it to take a limit parameter
        $refl = new ReflectionMethod($obj, 'evenFibonacciNumSum');
        $numParams = $refl->getNumberOfParameters();
        $this->assertEquals(1,$numParams);
        
        // we are expecting it to return an interger
        //$this->assertTrue( is_int( $obj->evenFibonacciNumSum()) );
        
    }
}

class evenFibonaciNumSum{
    
    private $limit;
    
    function evenFibonacciNumSum( $limit = 4000000 ){
        
    }
    
}

?>